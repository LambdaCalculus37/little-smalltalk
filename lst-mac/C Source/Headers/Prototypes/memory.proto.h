/* memory.c */noreturn initMemoryManager(void);void setFreeLists(void);object *mBlockAlloc(int memorySize);object allocObject(int memorySize);object allocByte(int size);object allocStr(char *str);# ifndef incrvoid incr(object z);# endif# ifndef incrvoid decr(object z);# endifvoid sysDecr(object z);# ifndef basicAtobject basicAt(object z, int i);# endif# ifndef simpleAtPutvoid simpleAtPut(object z, int i, object v);# endif# ifndef basicAtPutvoid basicAtPut(object z, int i, object v);# endif# ifndef fieldAtPutvoid fieldAtPut(object z, int i, object v);# endif# ifndef byteAtint byteAt(object z, int i);# endifvoid byteAtPut(object z, int i, int x);void visit(object x);int objectCount(void);void swapObjects (object obj1, object obj2);