/* parser.c */void setInstanceVariables(object aClass);static void genCode(int value);static void genInstruction(int high, int low);static int genLiteral(object aLiteral);static void genInteger(int val);static boolean nameTerm(char *name);static int parseArray(void);static boolean term(void);static void parsePrimitive(void);static void genMessage(boolean toSuper, int argumentCount, object messagesym);static boolean unaryContinuation(boolean superReceiver);static boolean binaryContinuation(boolean superReceiver);static int optimizeBlock(int instruction, boolean dopop);static boolean keyContinuation(boolean superReceiver);static void continuation(boolean superReceiver);static void expression(void);static void assignment(char *name);static void statement(void);static void body(void);static void block(void);static void temporaries(void);static void messagePattern(void);boolean parse(object method, char *text, boolean savetext);